syntax = "proto3";

package question_storage;

option csharp_namespace = "Quiz.QuestionStorage.Grpc";

service QuestionStorage {
  rpc Ping (Empty) returns (Empty);  
  rpc GetQuestion (QuestionId) returns (QuestionResponse);
  rpc GetTextOnlyQuestionFormulation (QuestionId) returns (TextOnlyQuestionFormulationResponse);
  rpc GetFreeTextAnswerDefinition (QuestionId) returns (FreeTextAnswerDefinitionResponse);
  rpc GetOneTextChoiceAnswerDefinition (QuestionId) returns (OneTextChoiceAnswerDefinitionResponse);
}

enum QuestionFormulationType
{
  FORMULATION_TYPE_UNSPECIFIED = 0;
  FORMULATION_TYPE_TEXT_ONLY = 1;
}

enum AnswerDefinitionType
{
  DEFINITION_TYPE_UNSPECIFIED = 0;
  DEFINITION_TYPE_FREE_TEXT = 1;
  DEFINITION_TYPE_ONE_TEXT_CHOICE = 2;
}

message Empty{
}

message Error{
  int32 code = 1;
}

message QuestionId {
  string value = 1;
}

message Question {
  QuestionId id = 1;
  QuestionFormulationType formulation_type = 2;
  AnswerDefinitionType answer_type = 3;
}

message TextOnlyQuestionFormulation
{
  string text = 1;
  optional string notes_for_host = 2;
}

message FreeTextAnswerDefinition
{
  string answer = 1;
  optional string notes_for_player = 2;
  repeated string additional_answers = 3;
}

message OneTextChoiceAnswerDefinition
{
  repeated string answer_variants = 1;
  int32 correct_variant = 2;
  optional string notes_for_player = 3;
}

message QuestionResponse{
  oneof response {
    Question question = 1;
    Error error = 2;
  }
}

message TextOnlyQuestionFormulationResponse
{
  oneof response {
    TextOnlyQuestionFormulation formulation = 1;
    Error error = 2;
  }
}

message FreeTextAnswerDefinitionResponse
{
  oneof response {
    FreeTextAnswerDefinition definition = 1;
    Error error = 2;
  }
}

message OneTextChoiceAnswerDefinitionResponse
{
  oneof response {
    OneTextChoiceAnswerDefinition definition = 1;
    Error error = 2;
  }
}


